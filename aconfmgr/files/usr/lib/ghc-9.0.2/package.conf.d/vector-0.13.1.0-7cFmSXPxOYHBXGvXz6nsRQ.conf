name:                 vector
version:              0.13.1.0
visibility:           public
id:                   vector-0.13.1.0-7cFmSXPxOYHBXGvXz6nsRQ
key:                  vector-0.13.1.0-7cFmSXPxOYHBXGvXz6nsRQ
license:              BSD-3-Clause
copyright:
    (c) Roman Leshchinskiy 2008-2012,
    Alexey Kuleshevich 2020-2022,
    Aleksey Khudyakov 2020-2022,
    Andrew Lelechenko 2020-2022

maintainer:
    Haskell Libraries Team <libraries@haskell.org>
    Alexey Kuleshevich <alexey@kuleshevi.ch>,
    Aleksey Khudyakov <alexey.skladnoy@gmail.com>,
    Andrew Lelechenko <andrew.lelechenko@gmail.com>

author:               Roman Leshchinskiy <rl@cse.unsw.edu.au>
homepage:             https://github.com/haskell/vector
synopsis:             Efficient Arrays
description:
    An efficient implementation of @Int@-indexed arrays (both mutable
    and immutable), with a powerful loop optimisation framework .

    It is structured as follows:

    ["Data.Vector"] Boxed vectors of arbitrary types.

    ["Data.Vector.Unboxed"] Unboxed vectors with an adaptive
    representation based on data type families.

    ["Data.Vector.Storable"] Unboxed vectors of 'Storable' types.

    ["Data.Vector.Primitive"] Unboxed vectors of primitive types as
    defined by the @primitive@ package. "Data.Vector.Unboxed" is more
    flexible at no performance cost.

    ["Data.Vector.Generic"] Generic interface to the vector types.

    There is also a (draft) tutorial on common uses of vector.

    * <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>

category:             Data, Data Structures
abi:                  884f2f6e2b04183229ef44c8ca6972f1
exposed:              True
exposed-modules:
    Data.Vector Data.Vector.Fusion.Bundle
    Data.Vector.Fusion.Bundle.Monadic Data.Vector.Fusion.Bundle.Size
    Data.Vector.Fusion.Stream.Monadic Data.Vector.Fusion.Util
    Data.Vector.Generic Data.Vector.Generic.Base
    Data.Vector.Generic.Mutable Data.Vector.Generic.Mutable.Base
    Data.Vector.Generic.New Data.Vector.Internal.Check
    Data.Vector.Mutable Data.Vector.Primitive
    Data.Vector.Primitive.Mutable Data.Vector.Storable
    Data.Vector.Storable.Internal Data.Vector.Storable.Mutable
    Data.Vector.Unboxed Data.Vector.Unboxed.Base
    Data.Vector.Unboxed.Mutable

import-dirs:          /usr/lib/ghc-9.0.2/site-local/vector-0.13.1.0
library-dirs:         /usr/lib/ghc-9.0.2/site-local/vector-0.13.1.0
dynamic-library-dirs: /usr/lib
data-dir:             /usr/share/haskell-vector
hs-libraries:         HSvector-0.13.1.0-7cFmSXPxOYHBXGvXz6nsRQ
include-dirs:         /usr/lib/ghc-9.0.2/site-local/vector-0.13.1.0/include
depends:
    base-4.15.1.0 deepseq-1.4.5.0
    primitive-0.7.4.0-vwDq7840sM3xgs4vWuDTK
    vector-stream-0.1.0.0-4waQ7Ba3DNc332rFgBcrBU

haddock-interfaces:   /usr/share/doc/haskell-vector/html/vector.haddock
haddock-html:         /usr/share/doc/haskell-vector/html
